{"version":3,"sources":["reportWebVitals.js","Component/Square.js","Component/Board.js","Game.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","square","onClick","className","isHighLight","value","Board","board","isPlaying","map","boardRow","rowIndex","colIndex","Game","boardInit","i","j","push","useState","stepNumber","xIsNext","lastPosition","row","col","history","setHistory","setIsPlaying","status","setStatus","length","current","setCurrent","isDescending","setIsDescending","calculateWinter","r","c","line","a","b","newHistory","slice","currentBoard","JSON","parse","stringify","newStep","winner","concat","handleClick","type","onChange","reverse","step","desc","move","descStep","find","jumpTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f27280bb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default function Square({ square, onClick }) {\r\n  return (\r\n    <button className={`square${square.isHighLight ? \" square--highlight\" : \"\"}`} onClick={() => onClick()}>\r\n      {square.value}\r\n    </button>\r\n  );\r\n}","import Square from \"./Square\";\r\n\r\nexport default function Board({board, isPlaying, onClick}) {\r\n  return (\r\n    <div className={isPlaying ? \"\" : \"board--disable\"}>\r\n      {board.map((boardRow, rowIndex) => (\r\n        <div key={rowIndex} className=\"board-row\">\r\n          {boardRow.map((square, colIndex) => (\r\n            <Square key={colIndex} square={board[rowIndex][colIndex]} onClick={()=>onClick(rowIndex,colIndex)}/>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import \"./Game.css\";\nimport Board from \"./Component/Board\";\nimport { useState } from \"react\";\n\nfunction Game() {\n  const boardInit = [];\n  for (let i = 0; i < 3; i++) {\n    const boardRow = [];\n    for (let j = 0; j < 3; j++) {\n      boardRow.push({ value: null, isHighLight: false });\n    }\n    boardInit.push(boardRow);\n  }\n  const [history, setHistory] = useState([\n    {\n      board: boardInit,\n      stepNumber: 0,\n      xIsNext: true,\n      lastPosition: { row: null, col: null }\n    }\n  ]);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [status, setStatus] = useState(\"Next player: X\");\n  const [current, setCurrent] = useState(history[history.length - 1]);\n  const [isDescending, setIsDescending] = useState(false);\n\n  const calculateWinter = (board) => {\n    const lines = [\n      [{ r: 0, c: 0 }, { r: 0, c: 1 }, { r: 0, c: 2 }],\n      [{ r: 1, c: 0 }, { r: 1, c: 1 }, { r: 1, c: 2 }],\n      [{ r: 2, c: 0 }, { r: 2, c: 1 }, { r: 2, c: 2 }],\n      [{ r: 0, c: 0 }, { r: 1, c: 0 }, { r: 2, c: 0 }],\n      [{ r: 0, c: 1 }, { r: 1, c: 1 }, { r: 2, c: 1 }],\n      [{ r: 0, c: 2 }, { r: 1, c: 2 }, { r: 2, c: 2 }],\n      [{ r: 0, c: 0 }, { r: 1, c: 1 }, { r: 2, c: 2 }],\n      [{ r: 0, c: 2 }, { r: 1, c: 1 }, { r: 2, c: 0 }],\n    ];\n\n    for (const line of lines) {\n      const [a, b, c] = line;\n      if (board[a.r][a.c].value\n        && board[a.r][a.c].value === board[b.r][b.c].value\n        && board[b.r][b.c].value === board[c.r][c.c].value) {\n        board[a.r][a.c].isHighLight = true;\n        board[b.r][b.c].isHighLight = true;\n        board[c.r][c.c].isHighLight = true;\n        return board[a.r][a.c].value;\n      }\n    }\n    return null;\n  };\n\n  const handleClick = (r, c) => {\n    if (current.board[r][c].value) {\n      return;\n    }\n    const newHistory = history.slice(0, current.stepNumber + 1);\n    const currentBoard = JSON.parse(JSON.stringify(current.board));\n    currentBoard[r][c].value = current.xIsNext ? \"X\" : \"O\";\n    const newStep = {\n      board: currentBoard,\n      stepNumber: current.stepNumber + 1,\n      xIsNext: !current.xIsNext,\n      lastPosition: { row: r, col: c }\n    };\n\n    const winner = calculateWinter(newStep.board);\n    if (winner) {\n      setStatus(\"Winner: \" + winner);\n      setIsPlaying(false);\n    } else if (newStep.stepNumber === 9) {\n      setStatus(\"Tie\");\n      setIsPlaying(false);\n    } else {\n      setStatus(\"Next player: \" + (newStep.xIsNext ? \"X\" : \"O\"));\n    }\n\n    setHistory(newHistory.concat(newStep));\n    setCurrent(newStep);\n  };\n\n  const jumpTo = (move) => {\n    const descStep = { ...history.find((step => step.stepNumber === move)) };\n    setCurrent(descStep);\n    const winner = calculateWinter(descStep.board);\n    if (winner) {\n      setStatus(\"Winner: \" + winner);\n      setIsPlaying(false);\n    } else if (descStep.stepNumber === 9) {\n      setStatus(\"Tie\");\n      setIsPlaying(false);\n    } else {\n      setStatus(\"Next player: \" + (descStep.xIsNext ? \"X\" : \"O\"));\n      setIsPlaying(true);\n    }\n  };\n\n  const moves = () => {\n    const sortedHistory = isDescending ? history.slice().reverse() : history;\n    return sortedHistory.map((step) => {\n      const desc = step.stepNumber ?\n        (`Go to move #${step.stepNumber} ${step.xIsNext ? \"O\" : \"X\"}(${step.lastPosition.col + 1},${step.lastPosition.row + 1})`) :\n        \"Go to game start\";\n      return (\n        <li key={step.stepNumber}>\n          <button className={`move${step.stepNumber === current.stepNumber ? \" move--current\" : \"\"}`}\n                  onClick={() => jumpTo(step.stepNumber)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board board={current.board} onClick={(r, c) => handleClick(r, c)} isPlaying={isPlaying}/>\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <div className=\"sort\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" onChange={() => setIsDescending(!isDescending)}/>\n            <span className=\"slider round\"/>\n          </label>\n          <p className=\"sort-label\">Sort descending</p>\n        </div>\n        <ol>{moves()}</ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Game from \"./Game\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}